plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.github.node-gradle.node" version "2.2.3"
}

group = 'com.studyoshu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:20.1.0'
	implementation 'org.projectlombok:lombok:1.18.18'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.2'
	testImplementation 'com.tngtech.archunit:archunit-junit5:0.13.1'
	// https://mvnrepository.com/artifact/org.testcontainers/testcontainers
	testImplementation group: 'org.testcontainers', name: 'testcontainers', version: '1.13.0'
	// https://mvnrepository.com/artifact/org.testcontainers/junit-jupiter
	testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.13.0'
	// https://mvnrepository.com/artifact/org.testcontainers/postgresql
	testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.13.0'
	//QueryDsl : https://jojoldu.tistory.com/538
	compile "com.querydsl:querydsl-jpa"
	compile "com.querydsl:querydsl-core"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:2.2.3"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:1.3.5"
}

// querydsl 적용
def generated='src/main/generated'
sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}

test {
	useJUnitPlatform()
}



/**
 * npm install start
 */
node {
	version = '14.16.1'
	download = true
	nodeModulesDir = file("${projectDir}/src/main/resources/static")
}
task copyFrontLib(type: Copy) {
	from "${projectDir}/src/main/resources/static"
	into "${projectDir}/build/resources/main/static/."
}
copyFrontLib.dependsOn npmInstall
compileJava.dependsOn copyFrontLib
/**
 * npm install end
 */